# vim: ft=sh 
#                      
#     ______          __       __  __
#    / __/ /__  ___  / /______/ /_/ /
#   / /_/ / _ \/ _ \/ __/ ___/ __/ / 
#  / __/ /  __/  __/ /_/ /__/ /_/ /  
# /_/ /_/\___/\___/\__/\___/\__/_/   
#                                    
#
_fleetctl() {
  local cur prev opts base
  COMPREPLY=()
  cur="${COMP_WORDS[COMP_CWORD]}"
  prev="${COMP_WORDS[COMP_CWORD-1]}"

  # cat             Output the contents of a submitted unit
  # destroy         Destroy one or more units in the cluster
  # fd-forward      Proxy stdin and stdout to a unix domain socket
  # help            Show a list of commands or help for one command
  # journal         Print the journal of a unit in the cluster to stdout
  # list-machines   Enumerate the current hosts in the cluster
  # list-unit-files List the units that exist in the cluster.
  # list-units      List the current state of units in the cluster
  # load            Schedule one or more units in the cluster, first submitting them if necessary.
  # ssh             Open interactive shell on a machine in the cluster
  # start           Instruct systemd to start one or more units in the cluster, first submitting and loading if necessary.
  # status          Output the status of one or more units in the cluster
  # stop            Instruct systemd to stop one or more units in the cluster.
  # submit          Upload one or more units to the cluster without starting them
  # unload          Unschedule one or more units in the cluster.
  # verify          DEPRECATED - No longer works
  # version         Print the version and exit

	commands="cat destroy fd-forward help journal list-machines list-unit-files list-units load ssh start status stop submit unload version"
	help_lookup="cat destroy fd-forward journal list-machines list-unit-files list-units load ssh start status stop submit unload version" 
	case "${prev}" in
		help )
			args=$(for word in $help_lookup;do echo "$word";done)
			COMPREPLY=( $(compgen -W "${args}" -- "${cur}") )
			return 0
			;;
    cat|journal|destroy|start|status|submit|stop|load|unload )
      components=$(fleetctl list-units --no-legend --fields=unit)
      COMPREPLY=( $(compgen -W "${components}" -- "${cur}") )
      return 0
      ;;
    ssh )
      machines=$(fleetctl list-machines --fields=machine --no-legend|sed s/\\.//g)
      units=$(fleetctl list-units --no-legend --fields=unit)
      COMPREPLY=( $(compgen -W "${units}  ${machines}" -- "${cur}") )
      return 0
      ;;
    list-machines )
      COMPREPLY=( $(compgen -W "--full -l --no-lengend" -- "${cur}") )
      return 0
      ;;
	esac
  
  # fleetctl list-units |awk '{print $1}'|sed 1d

  COMPREPLY=($(compgen -W "${commands}" -- "${cur}"))
  return 0
}

complete -F _fleetctl fleetctl

